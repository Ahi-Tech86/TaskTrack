plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
}

ext {
    jjwtVersion = '0.11.5'
    junitVersion = '5.7.0'
    dotenvVersion = '5.2.2'
    mockitoVersion = '3.6.28'
    openApiVersion = '2.0.2'
    restAssuredVersion = '5.3.2'
    testcontainersVersion = '1.17.3'
    redisTestContainerVersion = '2.2.2'
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Cloud dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Databases dependencies
    implementation 'redis.clients:jedis'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    // library dependency
    implementation project(':lib')

    // Other dependencies
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    implementation "io.github.cdimascio:java-dotenv:${dotenvVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"

    // Dependencies to test
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "com.redis:testcontainers-redis:${redisTestContainerVersion}"
}